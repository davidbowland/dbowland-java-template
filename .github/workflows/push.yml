# Build and (eventually) deploy
name: Build and deploy project

on:
  push:
    branches:
      - master
      - feature/add-ecr-deployment

jobs:
  deploy:
    name: Build and deploy project
    runs-on: ubuntu-latest
    steps:
      - name: Extract repository and branch name from context
        id: get-deploy-context
        run: |
          branch=$(echo ${{ github.ref }} | grep "[^/]*$" -o)
          echo "::set-output name=branch::$branch"
          service_name=$(echo ${{ github.repository }} | grep "[^/]*$" -o)
          echo "::set-output name=service_name::$service_name"
      - name: Checkout latest code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Java 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build project, which checks style and runs tests
        run: ./gradlew build --rerun-tasks
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.get-deploy-context.outputs.branch }}-${{ github.sha }}
          SERVICE_NAME: ${{ steps.get-deploy-context.outputs.service_name }}
        run: |
          docker build -t $ECR_REGISTRY/$SERVICE_NAME:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$SERVICE_NAME:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$SERVICE_NAME:$IMAGE_TAG $ECR_REGISTRY/$SERVICE_NAME:latest
          docker push $ECR_REGISTRY/$SERVICE_NAME:latest
#      - name: Build, tag, and push image to Amazon ECR
#        env:
#          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          IMAGE_TAG: ${{ steps.get-deploy-context.outputs.branch }}-${{ github.sha }}
#          SERVICE_NAME: ${{ steps.get-deploy-context.outputs.service_name }}
#        run: |
#          ./scripts/uploadToEcr.sh $IMAGE_TAG
#          ./scripts/uploadToEcr.sh latest
      - name: Deploy with CodeDeploy
        env:
          SERVICE_NAME: ${{ steps.get-deploy-context.outputs.service_name }}
        run: |
          ./scripts/runCodeDeploy.sh PRODUCTION
